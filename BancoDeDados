#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TABLE_NAME 50
#define MAX_COLUMNS 10
#define MAX_STRING_LENGTH 256

// Protótipos das funções
void criarInserirTabela();
void consultarTabela();
void excluirTabela();

int main() {
    int opcao;

    do {
        printf("\nEscolha uma opção:\n");
        printf("1. Criar e Inserir Tabela\n");
        printf("2. Consultar Tabela\n");
        printf("3. Excluir Tabela\n");
        printf("4. Sair\n");

        printf("Opção: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                criarInserirTabela();
                break;

            case 2:
                consultarTabela();
                break;

            case 3:
                excluirTabela();
                break;

            case 4:
                printf("Saindo do programa.\n");
                break;

            default:
                printf("Opção inválida. Tente novamente.\n");
        }
    } while (opcao != 4);

    return 0;
}

void criarInserirTabela() {
    char nome_tabela[MAX_TABLE_NAME];
    printf("Digite o nome da tabela: ");
    scanf("%s", nome_tabela);

    FILE *arquivo = fopen(nome_tabela, "w");
    if (arquivo == NULL) {
        perror("Erro ao criar a tabela");
        return;
    }

    int num_colunas;
    printf("Digite o número de colunas (até %d): ", MAX_COLUMNS);
    scanf("%d", &num_colunas);

    fprintf(arquivo, "%d\n", num_colunas);

    for (int i = 0; i < num_colunas; ++i) {
        char nome_coluna[MAX_STRING_LENGTH];
        printf("Digite o nome da coluna %d: ", i + 1);
        scanf("%s", nome_coluna);
        fprintf(arquivo, "%s\t", nome_coluna);
    }
    fprintf(arquivo, "\n");

    printf("Digite o número de linhas: ");
    int num_linhas;
    scanf("%d", &num_linhas);

    for (int i = 0; i < num_linhas; ++i) {
        for (int j = 0; j < num_colunas; ++j) {
            char dado[MAX_STRING_LENGTH];
            printf("Digite o dado para a coluna %d da linha %d: ", j + 1, i + 1);
            scanf("%s", dado);
            fprintf(arquivo, "%s\t", dado);
        }
        fprintf(arquivo, "\n");
    }

    fclose(arquivo);
    printf("Tabela '%s' criada e dados inseridos com sucesso!\n", nome_tabela);
}

void consultarTabela() {
    char nome_tabela[MAX_TABLE_NAME];
    printf("Digite o nome da tabela: ");
    scanf("%s", nome_tabela);

    FILE *arquivo = fopen(nome_tabela, "r");
    if (arquivo == NULL) {
        perror("Erro ao abrir o arquivo para leitura");
        return;
    }

    int num_colunas;
    fscanf(arquivo, "%d", &num_colunas);

    printf("Conteúdo da tabela '%s':\n", nome_tabela);

    for (int i = 0; i < num_colunas; ++i) {
        char nome_coluna[MAX_STRING_LENGTH];
        fscanf(arquivo, "%s", nome_coluna);
        printf("%s\t", nome_coluna);
    }
    printf("\n");

    char entrada[MAX_STRING_LENGTH];
    while (fscanf(arquivo, "%s", entrada) != EOF) {
        printf("%s\t", entrada);
    }

    fclose(arquivo);
}

void excluirTabela() {
    char nome_tabela[MAX_TABLE_NAME];
    printf("Digite o nome da tabela a ser excluída: ");
    scanf("%s", nome_tabela);

    if (remove(nome_tabela) == 0) {
        printf("Tabela '%s' excluída com sucesso!\n", nome_tabela);
    } else {
        perror("Erro ao excluir a tabela");
    }
}
